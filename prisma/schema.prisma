// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique @db.VarChar(255)
  password   String       @db.VarChar(255)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Session    Session[]
  Enrollment Enrollment[]
  Ticket     Ticket?
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id                 Int        @id @default(autoincrement())
  title              String     @db.VarChar(255)
  backgroundImageUrl String     @db.VarChar(255)
  logoImageUrl       String     @db.VarChar(255)
  startsAt           DateTime
  endsAt             DateTime
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  Ticket             Ticket[]
  modalities         Modality[]
}

model Enrollment {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  cpf       String    @db.VarChar(255)
  birthday  DateTime
  phone     String    @db.VarChar(255)
  userId    Int       @unique
  User      User      @relation(fields: [userId], references: [id])
  Address   Address[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Address {
  id            Int        @id @default(autoincrement())
  cep           String     @db.VarChar(255)
  street        String     @db.VarChar(255)
  city          String     @db.VarChar(255)
  state         String     @db.VarChar(255)
  number        String     @db.VarChar(255)
  neighborhood  String     @db.VarChar(255)
  addressDetail String?    @db.VarChar(255)
  enrollmentId  Int        @unique
  Enrollment    Enrollment @relation(fields: [enrollmentId], references: [id])
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Modality {
  id      Int      @id @default(autoincrement())
  name    String
  price   Int
  Event   Event    @relation(fields: [eventId], references: [id])
  eventId Int
  Ticket  Ticket[]

  @@unique([name, eventId])
  @@map("modalities")
}

model Accommodation {
  id     Int      @id @default(autoincrement())
  name   String
  price  Int
  Ticket Ticket[]

  @@map("accommodations")
}

model Ticket {
  id              Int            @id @default(autoincrement())
  userId          Int            @unique
  eventId         Int
  paid            Boolean        @default(false)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  modalityId      Int
  accommodationId Int?
  roomId          Int?
  activities      Activity[]
  User            User           @relation(fields: [userId], references: [id])
  Event           Event          @relation(fields: [eventId], references: [id])
  modality        Modality       @relation(fields: [modalityId], references: [id])
  accommodation   Accommodation? @relation(fields: [accommodationId], references: [id])
  room            Room?          @relation(fields: [roomId], references: [id])

  @@map("tickets")
}

model Hotel {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  imageUrl  String
  roomTypes RoomType[]
  rooms     Room[]

  @@map("hotels")
}

model Room {
  id         Int      @id @default(autoincrement())
  hotelId    Int
  roomTypeId Int
  roomType   RoomType @relation(fields: [roomTypeId], references: [id])
  hotel      Hotel    @relation(fields: [hotelId], references: [id])
  ticket     Ticket[]

  @@map("rooms")
}

model RoomType {
  id       Int     @id @default(autoincrement())
  name     String  @unique
  capacity Int
  rooms    Room[]
  hotels   Hotel[]

  @@map("roomTypes")
}

model Activity {
  id         Int      @id @default(autoincrement())
  name       String
  locationId Int
  startTime  DateTime @db.Timestamptz()
  endTime    DateTime @db.Timestamptz()
  capacity   Int
  ticket     Ticket[]
  location   Location @relation(fields: [locationId], references: [id])

  @@map("activities")
}

model Location {
  id       Int        @id @default(autoincrement())
  name     String
  activity Activity[]

  @@map("locations")
}
